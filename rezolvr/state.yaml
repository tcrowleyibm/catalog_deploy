environmentVars:
  appEnvProps:
  - name: catalog_port
    value: "3001"
  - name: catalog_host
    value: catalogms-service
  - name: orders_port
    value: "3003"
  - name: orders_host
    value: ordersms-service
  - name: app_message
    value: Hello from Rezolvr!
  - name: welcome_port
    value: "3000"
  dbEnvProps:
  - name: db_username
    value: staginguser
  - name: db_password
    value: passwordie
  - name: db_port
    value: "5432"
  - name: db_host
    value: catalogdb-service
  registryProps:
  - name: endpoint
    value: host.minikube.internal:5000/
components:
- name: postgresdb
  type: resource.db.postgres
  driver: ""
  description: Database resources for the staging environment
  provides:
  - name: ordersdb
    type: service.db.postgres
    params:
    - name: db_username
      formula: '{{with(index .Needs "environment.properties:dbEnvProps")}}{{.Params.db_username.Value}}{{end}}'
      value: staginguser
    - name: db_password
      formula: '{{with(index .Needs "environment.properties:dbEnvProps")}}{{.Params.db_password.Value}}{{end}}'
      value: passwordie
    - name: db_port
      formula: '{{with(index .Needs "environment.properties:dbEnvProps")}}{{.Params.db_port.Value}}{{end}}'
      value: "5432"
    - name: db_name
      value: postgres
    - name: db_host
      formula: '{{with(index .Needs "environment.properties:dbEnvProps")}}{{.Params.db_host.Value}}{{end}}'
      value: catalogdb-service
    - name: containerName
      formula: '{{.Component.Name}}'
      value: postgresdb
    - name: imageName
      value: postgres
    - name: image.tag
      value: latest
  - name: catalogdb
    type: service.db.postgres
    params:
    - name: db_host
      formula: '{{with(index .Needs "environment.properties:dbEnvProps")}}{{.Params.db_host.Value}}{{end}}'
      value: catalogdb-service
    - name: containerName
      formula: '{{.Component.Name}}'
      value: postgresdb
    - name: imageName
      value: postgres
    - name: image.tag
      value: latest
    - name: db_username
      formula: '{{with(index .Needs "environment.properties:dbEnvProps")}}{{.Params.db_username.Value}}{{end}}'
      value: staginguser
    - name: db_password
      formula: '{{with(index .Needs "environment.properties:dbEnvProps")}}{{.Params.db_password.Value}}{{end}}'
      value: passwordie
    - name: db_port
      formula: '{{with(index .Needs "environment.properties:dbEnvProps")}}{{.Params.db_port.Value}}{{end}}'
      value: "5432"
    - name: db_name
      value: postgres
  uses:
  - name: ""
    type: environment
    params:
    - name: POSTGRES_PASSWORD
      formula: '{{with(index .Needs "environment.properties:dbEnvProps")}}{{.Params.db_password.Value}}{{end}}'
      value: passwordie
    - name: POSTGRES_USER
      formula: '{{with(index .Needs "environment.properties:dbEnvProps")}}{{.Params.db_username.Value}}{{end}}'
      value: staginguser
  needs:
  - name: dbEnvProps
    type: environment.properties
    params:
    - name: db_username
      value: staginguser
      required: true
    - name: db_password
      value: passwordie
      required: true
    - name: db_port
      value: "5432"
      defaultValue: "5432"
    - name: db_host
      value: catalogdb-service
      required: true
- name: catalog
  type: resource.web.app
  driver: ""
  description: A catalog for boat tours
  provides:
  - name: catalogms
    type: service.web.app
    params:
    - name: dbtime_endpoint
      value: /dbtime
    - name: charters_endpoint
      value: /charters
    - name: port
      formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.catalog_port.Value}}{{end}}'
      value: "3001"
    - name: imageName
      formula: '{{with(index .Needs "service.container.registry:imageRegistry")}}{{.Params.endpoint.Value}}{{end}}{{.Component.Name}}'
      value: host.minikube.internal:5000/catalog
    - name: image.tag
      value: latest
  uses:
  - name: ""
    type: environment
    params:
    - name: DB_NAME
      formula: '{{with(index .Needs "service.db.postgres:catalogdb")}}{{.Params.db_name.Value}}{{end}}'
      value: postgres
    - name: DB_HOST
      formula: '{{with(index .Needs "service.db.postgres:catalogdb")}}{{.Params.db_host.Value}}{{end}}'
      value: catalogdb-service
    - name: MY_PORT
      formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.catalog_port.Value}}{{end}}'
      value: "3001"
    - name: DB_USER
      formula: '{{with(index .Needs "service.db.postgres:catalogdb")}}{{.Params.db_username.Value}}{{end}}'
      value: staginguser
    - name: DB_PW
      formula: '{{with(index .Needs "service.db.postgres:catalogdb")}}{{.Params.db_password.Value}}{{end}}'
      value: passwordie
    - name: DB_PORT
      formula: '{{with(index .Needs "service.db.postgres:catalogdb")}}{{.Params.db_port.Value}}{{end}}'
      value: "5432"
  needs:
  - name: catalogdb
    type: service.db.postgres
    params:
    - name: db_port
      value: "5432"
      required: true
    - name: db_name
      value: postgres
      required: true
    - name: db_host
      value: catalogdb-service
      required: true
    - name: db_username
      value: staginguser
      required: true
    - name: db_password
      value: passwordie
      required: true
  - name: appEnvProps
    type: environment.properties
    params:
    - name: app_message
      value: Hello from Rezolvr!
      required: true
    - name: catalog_port
      value: "3001"
      required: true
  - name: imageRegistry
    type: service.container.registry
    params:
    - name: endpoint
      value: host.minikube.internal:5000/
      required: true
- name: orders
  type: resource.web.app
  driver: ""
  description: A microservice for placing boat tour orders
  provides:
  - name: ordersms
    type: service.web.app
    params:
    - name: orders_endpoint
      value: /orders
    - name: port
      formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.orders_port.Value}}{{end}}'
      value: "3003"
    - name: imageName
      formula: '{{with(index .Needs "service.container.registry:imageRegistry")}}{{.Params.endpoint.Value}}{{end}}{{.Component.Name}}'
      value: host.minikube.internal:5000/orders
    - name: image.tag
      value: latest
  uses:
  - name: ""
    type: environment
    params:
    - name: DB_USER
      formula: '{{with(index .Needs "service.db.postgres:ordersdb")}}{{.Params.db_username.Value}}{{end}}'
      value: staginguser
    - name: DB_PW
      formula: '{{with(index .Needs "service.db.postgres:ordersdb")}}{{.Params.db_password.Value}}{{end}}'
      value: passwordie
    - name: DB_PORT
      formula: '{{with(index .Needs "service.db.postgres:ordersdb")}}{{.Params.db_port.Value}}{{end}}'
      value: "5432"
    - name: DB_NAME
      formula: '{{with(index .Needs "service.db.postgres:ordersdb")}}{{.Params.db_name.Value}}{{end}}'
      value: postgres
    - name: DB_HOST
      formula: '{{with(index .Needs "service.db.postgres:ordersdb")}}{{.Params.db_host.Value}}{{end}}'
      value: catalogdb-service
    - name: MY_PORT
      formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.orders_port.Value}}{{end}}'
      value: "3003"
  needs:
  - name: ordersdb
    type: service.db.postgres
    params:
    - name: db_port
      value: "5432"
      required: true
    - name: db_name
      value: postgres
      required: true
    - name: db_host
      value: catalogdb-service
      required: true
    - name: db_username
      value: staginguser
      required: true
    - name: db_password
      value: passwordie
      required: true
  - name: appEnvProps
    type: environment.properties
    params:
    - name: orders_port
      value: "3003"
      required: true
  - name: imageRegistry
    type: service.container.registry
    params:
    - name: endpoint
      value: host.minikube.internal:5000/
      required: true
- name: imageRegistry
  type: resource.container.registry
  driver: ""
  description: Registry for storing and retrieving container images
  provides:
  - name: imageRegistry
    type: service.container.registry
    params:
    - name: endpoint
      formula: '{{with(index .Needs "environment.properties:registryProps")}}{{.Params.endpoint.Value}}{{end}}'
      value: host.minikube.internal:5000/
  uses: []
  needs:
  - name: registryProps
    type: environment.properties
    params:
    - name: endpoint
      value: host.minikube.internal:5000/
      required: true
- name: welcome
  type: resource.web.app
  driver: ""
  description: Main landing page for the boat tour workload
  provides:
  - name: welcomeapp
    type: service.web.app
    params:
    - name: message_endpoint
      value: /message
    - name: charters_endpoint
      value: /catalog
    - name: port
      formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.welcome_port.Value}}{{end}}'
      value: "3000"
    - name: imageName
      formula: '{{with(index .Needs "service.container.registry:imageRegistry")}}{{.Params.endpoint.Value}}{{end}}{{.Component.Name}}'
      value: host.minikube.internal:5000/welcome
    - name: image.tag
      value: latest
  uses:
  - name: ""
    type: environment
    params:
    - name: CHARTERS_URL
      formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.catalog_host.Value}}{{end}}{{with(index .Needs "service.web.app:catalogms")}}:{{.Params.port.Value}}{{.Params.charters_endpoint.Value}}{{end}}'
      value: catalogms-service:3001/charters
    - name: ORDERS_URL
      formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.orders_host.Value}}{{end}}{{with(index .Needs "service.web.app:ordersms")}}:{{.Params.port.Value}}{{.Params.orders_endpoint.Value}}{{end}}'
      value: ordersms-service:3003/orders
    - name: WELCOME_PORT
      formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.welcome_port.Value}}{{end}}'
      value: "3000"
    - name: APP_MSG
      formula: '{{with(index .Needs "environment.properties:appEnvProps")}}{{.Params.app_message.Value}}{{end}}'
      value: Hello from Rezolvr!
  needs:
  - name: appEnvProps
    type: environment.properties
    params:
    - name: app_message
      value: Hello from Rezolvr!
      required: true
    - name: welcome_port
      value: "3000"
      required: true
    - name: catalog_host
      value: catalogms-service
      required: true
    - name: orders_host
      value: ordersms-service
      required: true
  - name: imageRegistry
    type: service.container.registry
    params:
    - name: endpoint
      value: host.minikube.internal:5000/
      required: true
  - name: catalogms
    type: service.web.app
    params:
    - name: charters_endpoint
      value: /charters
      required: true
    - name: port
      value: "3001"
      required: true
    - name: imageName
      value: host.minikube.internal:5000/catalog
      required: true
  - name: ordersms
    type: service.web.app
    params:
    - name: orders_endpoint
      value: /orders
      required: true
    - name: port
      value: "3003"
      required: true
    - name: imageName
      value: host.minikube.internal:5000/orders
      required: true
